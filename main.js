(()=>{"use strict";const t=new class{constructor(t){this._positions=[],this.LETTERS=["a","b","c","d","e","f","g","h"],this.boardContainer=t}create(){for(let t=0;t<8;t++)for(let e=0;e<8;e++){if(0===t){const t=document.createElement("div");t.textContent=this.LETTERS[e],t.classList.add("col-label"),t.setAttribute("style",`left: calc(${12.5*e+6.25}% - .25rem`),this.boardContainer.appendChild(t)}if(0===e){const e=document.createElement("div");e.textContent=(t+1).toString(),e.classList.add("row-label"),e.setAttribute("style",`top: calc(${12.5*(7-t)+6.25}% - .5rem`),this.boardContainer.appendChild(e)}const s=document.createElement("div");let i;s.classList.add("board-cell"),i=e%2==0?"bright":"dark",t%2==1&&(i="bright"===i?"dark":"bright"),s.classList.add(i);const n=`${this.LETTERS[7-t]}${e+1}`;s.id=n,this.boardContainer.appendChild(s)}}getAllGameCells(){return document.querySelectorAll(".board-cell")}filterElementsOfPath(){const t=this._positions.map((t=>`${this.LETTERS[t[1]]}${t[0]+1}`));return Array.from(this.getAllGameCells()).filter((e=>-1!==t.indexOf(e.id)))}selectElementsOfPath(){this.filterElementsOfPath().forEach((t=>t.classList.add("selected")))}removeAllSelections(){this.getAllGameCells().forEach((t=>t.classList.remove("selected")))}set positions(t){this._positions=t,this.removeAllSelections(),this.selectElementsOfPath()}}(document.querySelector(".chess-board")),e=new class{constructor(t){this._positions=[],this.ANIM_STEP_DURATION=500,this.knight=t}putTo(t){const[e,s]=t;let i=`top: ${87.5-12.5*s}%; left: ${12.5*e}%`;this.knight.setAttribute("style",i),this.knight.setAttribute("data-pos",JSON.stringify(t))}moveTo(t){const e=t[0],s=JSON.parse(this.knight.getAttribute("data-pos"))[1];setTimeout((()=>this.putTo([e,s])),0),setTimeout((()=>this.putTo(t)),this.ANIM_STEP_DURATION)}animate(){let t=0;this.animationID=setInterval((()=>{t===this._positions.length&&(t=0,this.knight.classList.remove("animate")),1===t&&this.knight.classList.add("animate");const e=this._positions[t];0===t?this.putTo(e):this.moveTo(e),t++}),3*this.ANIM_STEP_DURATION)}stopAnimation(){this.animationID&&clearInterval(this.animationID)}set positions(t){this._positions=t}}(document.querySelector(".knight"));class s{constructor(t,e){this.value=[t,e]}isValid(){const[t,e]=this.value;return t>=0&&t<=7&&e>=0&&e<=7}isEqual(t){return this.value[0]===t.value[0]&&this.value[1]===t.value[1]}inc(t){const[e,i]=this.value,[n,o]=t;return new s(e+n,i+o)}}class i{constructor(t){this.POS_INCREMENTS=[[1,2],[2,1],[-1,2],[-2,1],[1,-2],[2,-1],[-1,-2],[-2,-1]],this.foundPositions=[],this.root={parent:null,position:t,children:[]}}_isFound(t){return-1!==this.foundPositions.findIndex((e=>e.isEqual(t)))||(this.foundPositions.push(t),!1)}_find(t,e){if(e.position.isEqual(t))return e;if(0===e.children.length)return null;{let s=null,i=0;for(;!s&&i<e.children.length;)s=s||this._find(t,e.children[i]),i++;return s}}find(t){return this._find(t,this.root)}_buildTree(t){const e=this.POS_INCREMENTS.map((e=>t.position.inc(e))).filter((t=>t.isValid())).filter((t=>!this._isFound(t)));return t.children=e.map((e=>({parent:t,position:e,children:[]}))),t}buildTree(){const t=[[this.root]];for(;t.length>0;){const e=[];t.shift().map((t=>this._buildTree(t))).forEach((t=>{t.children.forEach((t=>{e.push(t)}))})),e.length>0&&t.push(e)}return this.root}findShortestPathTo(t){const e=[];let s=this.find(t);for(;s;)e.push(s.position.value),s=s.parent;let i=[];for(;e.length>0;)i.push(e.pop());return i}}(new class{constructor(){this.formContainer=document.querySelector(".form-container"),this.buttonSwap=document.querySelector("#btn-swap"),this.shortestPathPElement=document.querySelector("#shortest-path"),this.form=document.querySelector("form"),this.largeKnightImg=document.querySelector(".large"),this.ANIMATION_DURATION=500,this.handleSwapFormWithChessBoard=this.handleSwapFormWithChessBoard.bind(this),this.handleSubmit=this.handleSubmit.bind(this),this.sizeFormContainer=this.sizeFormContainer.bind(this)}handleSwapFormWithChessBoard(){"Form"===this.buttonSwap.textContent?(this.buttonSwap.textContent="Chess",t.boardContainer.classList.add("spin-out")):(this.buttonSwap.textContent="Form",this.formContainer.classList.add("spin-out")),setTimeout((()=>{this.formContainer.classList.toggle("invisible"),t.boardContainer.classList.toggle("invisible")}),this.ANIMATION_DURATION),setTimeout((()=>{this.formContainer.classList.contains("invisible")?t.boardContainer.classList.remove("spin-out"):this.formContainer.classList.remove("spin-out")}),this.ANIMATION_DURATION+20),setTimeout((()=>{t.boardContainer.classList.contains("invisible")?e.stopAnimation():e.animate()}),2*this.ANIMATION_DURATION+20)}getFormData(){const t=this.form.elements,e=["start-x","start-y","end-x","end-y"].map((e=>+t.namedItem(e).value));return{start:new s(e[0],e[1]),end:new s(e[2],e[3])}}calcShortestPath(t){const e=new i(t.start);return e.buildTree(),e.findShortestPathTo(t.end)}output(t){const e=["a","b","c","d","e","f","g","h"];this.shortestPathPElement.innerHTML="Shortest Path: <br>",t.forEach(((t,s)=>{this.shortestPathPElement.innerHTML+=`${s}. ${e[t[0]]}${t[1]+1} <br>`}))}handleSubmit(s){s.preventDefault();const i=this.getFormData(),n=this.calcShortestPath(i);this.output(n),e.positions=n,t.positions=n}sizeFormContainer(){let t=window.innerHeight-160;t>500&&(t=500),t<150&&(t=150),t<250?this.largeKnightImg.classList.add("invisible"):this.largeKnightImg.classList.remove("invisible"),this.formContainer.setAttribute("style",`height: ${t}px; width: ${t}px`)}animateTitle(){const t=document.querySelector(".title");setInterval((()=>{t.classList.toggle("black")}),this.ANIMATION_DURATION)}run(){t.create(),this.buttonSwap.addEventListener("click",this.handleSwapFormWithChessBoard),this.form.addEventListener("submit",this.handleSubmit),window.addEventListener("resize",this.sizeFormContainer),this.sizeFormContainer(),this.animateTitle()}}).run()})();